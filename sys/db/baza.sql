# Pravljenje nove BP
CREATE DATABASE IF NOT EXISTS post4less
DEFAULT CHARACTER SET utf8
DEFAULT COLLATE utf8_general_ci;

# Listanje svih BP na serveru
SHOW DATABASES;

# Izbor BP za rad sa njenim tabelama
USE post4less;

# Listanje svih tabela koje postoje u BP
SHOW TABLES;

# Tabela user
CREATE TABLE IF NOT EXISTS `user`
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
email VARCHAR(255) NOT NULL,
first_name VARCHAR(255) NOT NULL,
last_name VARCHAR(255) NOT NULL,
profile_photo VARCHAR(255) DEFAULT 'default.jpg',
password_hash CHAR(128) NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY(id),
UNIQUE(email)
);

# Tabela user_login
CREATE TABLE IF NOT EXISTS user_login
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
user_id INTEGER UNSIGNED NOT NULL,
remote_addr VARCHAR(255) NOT NULL,
user_agent VARCHAR(255) NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY(id),
FOREIGN KEY(user_id)
	REFERENCES `user`(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

# Tabela messages
CREATE TABLE IF NOT EXISTS message
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
email VARCHAR(255) NOT NULL,
content TEXT NOT NULL,
`status` BOOLEAN NOT NULL DEFAULT FALSE,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY(id)
);

# Tabela admin
CREATE TABLE IF NOT EXISTS admin
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
email VARCHAR(255) NOT NULL,
first_name VARCHAR(255) NOT NULL,
last_name VARCHAR(255) NOT NULL,
password_hash CHAR(128) NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY(id),
UNIQUE(email)
);

# Tabela city
CREATE TABLE IF NOT EXISTS city
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
`name` VARCHAR(255) NOT NULL,
PRIMARY KEY(id),
UNIQUE(`name`)
);

# Tabela vehicle
CREATE TABLE IF NOT EXISTS vehicle
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
`name` VARCHAR(255) NOT NULL,
PRIMARY KEY(id),
UNIQUE(`name`)
);

# Tabela service
CREATE TABLE IF NOT EXISTS service
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
user_id INTEGER UNSIGNED NOT NULL,
vehicle_id INTEGER UNSIGNED NOT NULL,
from_city_id INTEGER UNSIGNED NOT NULL,
to_city_id INTEGER UNSIGNED NOT NULL,
`at` DATETIME NOT NULL,
description TEXT NOT NULL,
active BOOLEAN NOT NULL DEFAULT TRUE,
PRIMARY KEY(id),
FOREIGN KEY(user_id)
	REFERENCES `user`(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
FOREIGN KEY(vehicle_id)
	REFERENCES vehicle(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
FOREIGN KEY(from_city_id)
	REFERENCES city(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
FOREIGN KEY(to_city_id)
	REFERENCES city(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

# Tabela offer
CREATE TABLE IF NOT EXISTS offer
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
user_id INTEGER UNSIGNED NOT NULL,
service_id INTEGER UNSIGNED NOT NULL,
price DECIMAL(10, 2) UNSIGNED NOT NULL,
description TEXT NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(user_id)
	REFERENCES `user`(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
FOREIGN KEY(service_id)
	REFERENCES service(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

# Tabela delivery_code
CREATE TABLE IF NOT EXISTS delivery_code
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
`status` VARCHAR(255) NOT NULL UNIQUE,
PRIMARY KEY(id)
);

# Tabela shipment
CREATE TABLE IF NOT EXISTS shipment
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
service_id INTEGER UNSIGNED NOT NULL,
offer_id INTEGER UNSIGNED NOT NULL,
delivery_code_id INTEGER UNSIGNED NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(service_id)
	REFERENCES service(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
FOREIGN KEY(offer_id)
	REFERENCES offer(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
FOREIGN KEY(delivery_code_id)
	REFERENCES delivery_code(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

# Tabela shipment_update
CREATE TABLE IF NOT EXISTS shipment_update
(
id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
shipment_id INTEGER UNSIGNED NOT NULL,
message TEXT NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(shipment_id)
	REFERENCES shipment(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);
